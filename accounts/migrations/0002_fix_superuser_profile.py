# Generated by Django 5.2.1 on 2025-06-11 07:08
# retail_saas/accounts/migrations/0003_fix_superuser_profile.py

from django.db import migrations
from django.conf import settings
import os

def ensure_superuser_profile(apps, schema_editor):
    """
    Finds the superuser defined by environment variables and ensures
    their SellerProfile exists.
    """
    User = apps.get_model('accounts', 'User')
    SellerProfile = apps.get_model('sellers', 'SellerProfile') # Use 'sellers' as the app name
    
    SU_USERNAME = os.environ.get('DJANGO_SU_NAME')

    if SU_USERNAME:
        try:
            # Find the existing superuser
            superuser_instance = User.objects.get(username=SU_USERNAME, is_superuser=True)
            
            # Check if a profile exists for this user, and create it if it doesn't
            if not SellerProfile.objects.filter(user=superuser_instance).exists():
                print(f"\nFIX: SellerProfile was missing for superuser '{SU_USERNAME}'. Creating it now.")
                SellerProfile.objects.create(user=superuser_instance, company_name="Platform Admin")
            else:
                print(f"\nOK: SellerProfile already exists for superuser '{SU_USERNAME}'. No action needed.")

        except User.DoesNotExist:
            print(f"\nWARNING: Superuser '{SU_USERNAME}' not found. Cannot ensure profile exists.")
    else:
        print("\nWARNING: DJANGO_SU_NAME not found in environment. Skipping profile fix.")


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0001_initial'), # Depends on the previous migration
        ('sellers', '0001_initial'), # Also depends on the sellers app existing
    ]

    operations = [
        migrations.RunPython(ensure_superuser_profile),
    ]